---
kind: pipeline
type: docker
name: Check Version

trigger:
  event:
  - cron
  cron:
  - nightly

steps:
  - name: Check Dockerhub Nextcloud Version
    image: fuzzymistborn/docker-alpine-skopeo:latest
    commands:
      - /bin/sh /drone/src/update.sh

  - name: push
    image: drone/git
    environment:
      GH_API_KEY:
        from_secret: gh_api_key
      TG_ID:
        from_secret: tg_id
      TG_TOKEN:
        from_secret: tg_token
    commands:
      - |
          if [ $(git diff HEAD | wc -l) -gt 1 ]
          then
          git add .
          git remote add deploy https://fuzzymistborn:$GH_API_KEY@github.com/FuzzyMistborn/nextcloud-docker.git
          DOCKER_VER=$( cat docker_ver )
          git commit -m "[CI Skip] Update Docker image to $DOCKER_VER"
          git tag -a $DOCKER_VER -m "Nextcloud Release v. $DOCKER_VER"
          git push deploy main
          git push deploy main $DOCKER_VER
          curl -s -X POST https://api.telegram.org/bot$TG_TOKEN/sendMessage -d chat_id=$TG_ID -d parse_mode=markdown -d text="‚úÖ  New Nextcloud Docker Release! %0Aüåê  [Output]($DRONE_BUILD_LINK)"
          git remote rm deploy
          fi

  - name: Send TG Notification
    image: appleboy/drone-telegram
    settings:
      token:
        from_secret: tg_token
      to:
        from_secret: tg_id
      format: markdown
      message: "‚ùå  Nextcloud Docker Updater Task has *FAILED*!\nüåê  [Output]({{build.link}})"
    when:
      status: [ failure ]

---
kind: pipeline
type: docker
name: Build Docker

trigger:
  event:
  - tag

volumes:
- name: docker_sock
  host:
    path: /var/run/docker.sock

steps:
- name: Build and push release
  image: fuzzymistborn/docker-alpine-skopeo:latest
  environment:
    DOCKERHUB_PASS:
      from_secret: dockerhub_pw
    GHCR_PASS:
      from_secret: ghcr_pw
  volumes:
    - name: docker_sock
      path: /var/run/docker.sock
  commands:
    - NC_FULLVER=$( cat docker_ver )
    - NC_MINORVER=$( cat docker_ver | cut -c 1-4 )
    - NC_MAJORVER=$( cat docker_ver | cut -c 1-2 )
    - docker login docker.io -u fuzzymistborn -p $DOCKERHUB_PASS
    - docker login ghcr.io -u fuzzymistborn -p $GHCR_PASS
    - docker build -t fuzzymistborn/nextcloud-docker:latest -t fuzzymistborn/nextcloud-docker:$NC_FULLVER -t fuzzymistborn/nextcloud-docker:$NC_MINORVER -t fuzzymistborn/nextcloud-docker:$NC_MAJORVER -t ghcr.io/fuzzymistborn/nextcloud-docker:latest -t ghcr.io/fuzzymistborn/nextcloud-docker:$NC_FULLVER -t ghcr.io/fuzzymistborn/nextcloud-docker:$NC_MINORVER -t ghcr.io/fuzzymistborn/nextcloud-docker:$NC_MAJORVER .
    - docker push --all-tags fuzzymistborn/nextcloud-docker
    - docker push --all-tags ghcr.io/fuzzymistborn/nextcloud-docker
    - docker rmi --force $(docker images -q fuzzymistborn/nextcloud*)
    - docker rmi --force $(docker images -q nextcloud:*)

- name: Send TG Notification
  image: appleboy/drone-telegram
  settings:
    token:
      from_secret: tg_token
    to:
      from_secret: tg_id
    format: markdown
    message: "{{#success build.status}}‚úÖ  Docker Build for `{{repo.name}}` was *successful*!{{else}}‚ùå  Docker Build for `{{repo.name}}` has *FAILED*!{{/success}} \nüåê  [Output]({{build.link}})\nüìù  Commit: {{ commit.message }}"
  when:
    status: [ success, failure ]
