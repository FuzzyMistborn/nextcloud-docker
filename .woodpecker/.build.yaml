steps:
  - name: Build and push release
    image: fuzzymistborn/docker-alpine-skopeo:latest
    environment:
      GHCR_PASS:
        from_secret: ghcr_pass
      DOCKERHUB_PASS:
        from_secret: dockerhub_pass
    commands:
      - NC_FULLVER=$( cat docker_ver )
      - NC_MINORVER=$( cat docker_ver | cut -c 1-4 )
      - NC_MAJORVER=$( cat docker_ver | cut -c 1-2 )
      - docker login docker.io -u fuzzymistborn -p $DOCKERHUB_PASS
      - docker login ghcr.io -u fuzzymistborn -p $GHCR_PASS
      - docker build -t fuzzymistborn/nextcloud-docker:latest -t fuzzymistborn/nextcloud-docker:$NC_FULLVER -t fuzzymistborn/nextcloud-docker:$NC_MINORVER -t fuzzymistborn/nextcloud-docker:$NC_MAJORVER -t ghcr.io/fuzzymistborn/nextcloud-docker:latest -t ghcr.io/fuzzymistborn/nextcloud-docker:$NC_FULLVER -t ghcr.io/fuzzymistborn/nextcloud-docker:$NC_MINORVER -t ghcr.io/fuzzymistborn/nextcloud-docker:$NC_MAJORVER .
      - docker push --all-tags fuzzymistborn/nextcloud-docker
      - docker push --all-tags ghcr.io/fuzzymistborn/nextcloud-docker
      - docker rmi --force $(docker images -q fuzzymistborn/nextcloud*)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  - name: Send TG Notification
    image: appleboy/drone-telegram
    settings:
      token:
        from_secret: tg_token
      to:
        from_secret: tg_id
      format: markdown
      message: "{{#success build.status}}‚úÖ  Docker Build for `{{repo.name}}` was *successful*!{{else}}‚ùå  Docker Build for `{{repo.name}}` has *FAILED*!{{/success}} \nüåê  [Output]({{build.link}})\nüìù  Commit: {{ commit.message }}"
    when:
      event: tag
      status:
        - success
        - failure

when:
  event: tag
